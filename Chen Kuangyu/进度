进度：(2022/10/2)
1.图片类型的转换：已经实现了jpg，bmp，gif，tiff，png图片的转换。通过typeTransfer抽象类，以及bmpTransfer等子类实现。
2.压缩zip包。imagCompress就是command的一个子类。通过文件流将图片写入创建的zip中。功能已经实现，将路径等跟用户接口连接即可
3.云端存储。等待胡哥的实现以及进一步商讨。

进度：(2022/10/4)
1.根据蒋哥的框架，已经将类型转换zip等功能与用户接口连接（export 1.jpg 2.png 3.gif 4.bmp 5.tiff 6.zip 7.save to local 8.save to cloud）。
类型转换：用户输入保存路径，即可将新type的image文件以原名保存到指定的保存路径
zip：用户输入zip文件路径，即可创建对应的zip文件，将对应的main_ip的图片以原名原类型存入zip文件中
由于需要，我在imagprocessor里面新加入localPath的instance来存储imagprocessor的用户存入路径（在我的final里面已经标出，主要就在imagProcessor.java跟readFromLocal.java）
2.新创建存入本地命令，用户输入保存路径即可将原图片以原名，原类型保存到指定的local路径

问题：1.zip文件目前只能单图片存入，之后根据白哥批量处理再做改进
     2.云端还未实现

进度: (2022/10/8）
1. 为了防止复写，在所以类型转换以及本地zip功能中，加入了static的int加在了文件名的后面（1，2，3...）。zip类不能直接加static（会有exception），维护一个zipSeq单例作为zip的static int
2. java jdk13以上可以实现打开zip文件写入的功能。jdk11在文件输出流把续写改为true后，zip文件打开显示已经损坏。所以多文件压一个zip的方法只有开了zip输出流之后一次性写进去。在与白哥蒋哥商
讨之后，考虑到批处理难以处理，所以摒弃多文件存zip，转为多文件可以存不同的zip（实现见1）

问题：云端未实现


进度：(2022/10/15)
1.catch了所有的用的库函数的exception
2.创建了两个exportException，nameNotFoundException和typeNotFoundException。原图片文件如果是名字为空或者类型为空，则抛出错误。

问题：
1.云端未实现

2022/10/30
实现了云端存储，但是目前还是通过文件路径转二进制

问题：
1.从bufferedimag转二进制
2.与gui结合
3.testing
4.code refractory
5.类图
6.report

2022/10/31
1.成功从bufferedimag将图片存入云端

2022/11/1
1.成功与gui结合

2022/11/2
1.完成类图
